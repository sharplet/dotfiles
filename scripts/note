#!/usr/bin/ruby

require "rake/pathmap"
require "yaml"

def load_or_create_config(path: nil)
  fail ArgumentError, "fatal: no config file specified" if path.nil?
  config_file = File.exist?(path) ? open(path) : YAML.dump({}, open(path, "w+"))
  config_file.rewind
  config = YAML.load(config_file)
  config_file.close
  config
end

def setup_defaults_for_config(config)
  set_default_for_config(config, "notes_dir", File.join(ENV.fetch("HOME"), "Notes"), prompt: "Notes directory")
  set_default_for_config(config, "filetype", "md", prompt: "Default file type")
end

def set_default_for_config(config, key, default_value, prompt: nil)
  current_value = config[key]
  prompt ||= key
  if current_value.nil? || current_value.empty?
    print "#{prompt} [#{default_value}] "
    new_value = gets.chomp
    config[key] = new_value.empty? ? default_value : new_value
  end
end

def save_config(config, path: nil)
  fail ArgumentError, "fatal: no config file specified" if path.nil?
  YAML.dump(config, open(path, "w")).close
end

def read_name_from_user_input(args: [], input: $stdin)
  file ||= args.shift
  file ||= begin
             print "Note filename: "
             input.gets.chomp
           end
  file
end

def note_path_for_name(name, notes_dir: nil, filetype: "")
  File.join(notes_dir, name.ext(filetype))
end

def exec_open_note(path)
  editor = ENV.fetch("VISUAL") {
    ENV.fetch("EDITOR")
  }
  fail "error: EDITOR not set" if editor.nil? || editor.empty?
  exec(editor, path)
end

CONFIG_FILE_PATH = File.join(ENV.fetch("HOME"), ".noterc").freeze

begin
  config = load_or_create_config(path: CONFIG_FILE_PATH)
  setup_defaults_for_config(config)
  save_config(config, path: CONFIG_FILE_PATH)
  note_name = read_name_from_user_input(args: ARGV, input: $stdin)
  note_path = note_path_for_name(note_name, notes_dir: config.fetch("notes_dir"), filetype: config.fetch("filetype"))
  exec_open_note(note_path)
rescue => e
  $stderr.puts(e)
  exit(1)
end
